{"ast":null,"code":"var _jsxFileName = \"/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/components/Timer.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveTimeLeftAction } from '../actions';\nimport '../Style/timer.css';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 30,\n      second: 1000\n    };\n    this.runCountdown = this.runCountdown.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  startTimer() {\n    const second = this.state.second;\n    this.runTimer = setInterval(() => this.runCountdown(), second);\n  }\n\n  runCountdown() {\n    const time = this.state.time;\n    const timeLeft = time - 1;\n    const timeLimit = 30;\n    const _this$props = this.props,\n          handleStyle = _this$props.handleStyle,\n          isTimerActive = _this$props.isTimerActive;\n\n    if (time > 0 && time <= timeLimit && isTimerActive) {\n      this.setState(() => ({\n        time: timeLeft\n      }), this.handleReset);\n    } else {\n      handleStyle();\n      this.setState({\n        time: 30\n      });\n    }\n  }\n\n  stopTimer() {\n    clearInterval(this.runTimer);\n  }\n\n  handleReset() {\n    const time = this.state.time;\n    const _this$props2 = this.props,\n          resetQuizTimer = _this$props2.resetQuizTimer,\n          restoreTimer = _this$props2.restoreTimer,\n          saveTimeLeft = _this$props2.saveTimeLeft;\n\n    if (resetQuizTimer) {\n      saveTimeLeft(time);\n      this.setState({\n        time: 30\n      }, restoreTimer());\n    }\n  }\n\n  render() {\n    const time = this.state.time;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, time));\n  }\n\n}\n\nTimer.propTypes = {\n  saveTimeLeft: PropTypes.func.isRequired,\n  resetQuizTimer: PropTypes.bool.isRequired,\n  restoreTimer: PropTypes.func.isRequired,\n  handleStyle: PropTypes.func.isRequired,\n  isTimerActive: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isTimerActive: state.userReducer.isTimerActive,\n  resetQuizTimer: state.timerReducer.isTimerReseted\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveTimeLeft: time => dispatch(saveTimeLeftAction(time))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer); // Para configuração do timer e correção do log de erro após a última questão do Quiz, tomamos por base o PR do grupo 21 da turma 07 e o repositório abaixo:\n// PR ---> https://github.com/tryber/sd-07-project-trivia-react-redux/pull/545/files\n// Repositório de @tspeed90 --> https://github.com/tspeed90/quiz-game/blob/master/src/components/timer.js\n// Referência do log de erro semelhante ao que estávamos encontrando: https://stackoverflow.com/questions/53949393/cant-perform-a-react-state-update-on-an-unmounted-component\n// Referências p/ refatoração parcial do timer:\n// ---> https://stackoverflow.com/questions/31545982/how-to-fire-periodic-actions-using-settimeout-and-dispatcher-in-redux/32921787#32921787\n// ---> https://www.pluralsight.com/guides/how-to-use-requestanimationframe-with-react\n// ---> https://jsfiddle.net/andykenward/9y1jjsuz\n// ---> https://jsfiddle.net/ab1n5vf9/\n// ---> https://jsbin.com/dupeji/12/edit?js,output\n// ---> https://jsbin.com/xusoqupipa/edit?js,output\n// ---> https://jsfiddle.net/a94jabzd/1/\n// ---> https://stackoverflow.com/questions/34577012/creating-a-stopwatch-with-redux\n// Agradecimento especial ao Coruja que deu a ideia de conectar o componente Timer ao estado global do redux!!","map":{"version":3,"sources":["/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/components/Timer.jsx"],"names":["React","PropTypes","connect","saveTimeLeftAction","Timer","Component","constructor","props","state","time","second","runCountdown","bind","handleReset","stopTimer","startTimer","componentDidMount","componentWillUnmount","runTimer","setInterval","timeLeft","timeLimit","handleStyle","isTimerActive","setState","clearInterval","resetQuizTimer","restoreTimer","saveTimeLeft","render","propTypes","func","isRequired","bool","mapStateToProps","userReducer","timerReducer","isTimerReseted","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAO,oBAAP;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,SAAL;AACD;;AAEDC,EAAAA,UAAU,GAAG;AAAA,UACHL,MADG,GACQ,KAAKF,KADb,CACHE,MADG;AAEX,SAAKQ,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKR,YAAL,EAAP,EAA4BD,MAA5B,CAA3B;AACD;;AAEDC,EAAAA,YAAY,GAAG;AAAA,UACLF,IADK,GACI,KAAKD,KADT,CACLC,IADK;AAEb,UAAMW,QAAQ,GAAGX,IAAI,GAAG,CAAxB;AACA,UAAMY,SAAS,GAAG,EAAlB;AAHa,wBAI0B,KAAKd,KAJ/B;AAAA,UAILe,WAJK,eAILA,WAJK;AAAA,UAIQC,aAJR,eAIQA,aAJR;;AAKb,QAAId,IAAI,GAAG,CAAP,IAAYA,IAAI,IAAIY,SAApB,IAAiCE,aAArC,EAAoD;AAClD,WAAKC,QAAL,CAAc,OAAO;AACnBf,QAAAA,IAAI,EAAEW;AADa,OAAP,CAAd,EAEI,KAAKP,WAFT;AAGD,KAJD,MAIO;AACLS,MAAAA,WAAW;AACX,WAAKE,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;AACF;;AAEDK,EAAAA,SAAS,GAAG;AACVW,IAAAA,aAAa,CAAC,KAAKP,QAAN,CAAb;AACD;;AAEDL,EAAAA,WAAW,GAAG;AAAA,UACJJ,IADI,GACK,KAAKD,KADV,CACJC,IADI;AAAA,yBAE2C,KAAKF,KAFhD;AAAA,UAEJmB,cAFI,gBAEJA,cAFI;AAAA,UAEYC,YAFZ,gBAEYA,YAFZ;AAAA,UAE0BC,YAF1B,gBAE0BA,YAF1B;;AAGZ,QAAIF,cAAJ,EAAoB;AAClBE,MAAAA,YAAY,CAACnB,IAAD,CAAZ;AACA,WAAKe,QAAL,CAAc;AACZf,QAAAA,IAAI,EAAE;AADM,OAAd,EAEGkB,YAAY,EAFf;AAGD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCpB,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,IADJ,CADF,CADF;AAQD;;AAlEiC;;AAqEpCL,KAAK,CAAC0B,SAAN,GAAkB;AAChBF,EAAAA,YAAY,EAAE3B,SAAS,CAAC8B,IAAV,CAAeC,UADb;AAEhBN,EAAAA,cAAc,EAAEzB,SAAS,CAACgC,IAAV,CAAeD,UAFf;AAGhBL,EAAAA,YAAY,EAAE1B,SAAS,CAAC8B,IAAV,CAAeC,UAHb;AAIhBV,EAAAA,WAAW,EAAErB,SAAS,CAAC8B,IAAV,CAAeC,UAJZ;AAKhBT,EAAAA,aAAa,EAAEtB,SAAS,CAACgC,IAAV,CAAeD;AALd,CAAlB;;AAQA,MAAME,eAAe,GAAI1B,KAAD,KAAY;AAClCe,EAAAA,aAAa,EAAEf,KAAK,CAAC2B,WAAN,CAAkBZ,aADC;AAElCG,EAAAA,cAAc,EAAElB,KAAK,CAAC4B,YAAN,CAAmBC;AAFD,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,YAAY,EAAGnB,IAAD,IAAU8B,QAAQ,CAACpC,kBAAkB,CAACM,IAAD,CAAnB;AADQ,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAACgC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClC,KAA7C,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveTimeLeftAction } from '../actions';\nimport '../Style/timer.css';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 30,\n      second: 1000,\n    };\n    this.runCountdown = this.runCountdown.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  startTimer() {\n    const { second } = this.state;\n    this.runTimer = setInterval(() => this.runCountdown(), second);\n  }\n\n  runCountdown() {\n    const { time } = this.state;\n    const timeLeft = time - 1;\n    const timeLimit = 30;\n    const { handleStyle, isTimerActive } = this.props;\n    if (time > 0 && time <= timeLimit && isTimerActive) {\n      this.setState(() => ({\n        time: timeLeft,\n      }), this.handleReset);\n    } else {\n      handleStyle();\n      this.setState({ time: 30 });\n    }\n  }\n\n  stopTimer() {\n    clearInterval(this.runTimer);\n  }\n\n  handleReset() {\n    const { time } = this.state;\n    const { resetQuizTimer, restoreTimer, saveTimeLeft } = this.props;\n    if (resetQuizTimer) {\n      saveTimeLeft(time);\n      this.setState({\n        time: 30,\n      }, restoreTimer());\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n    return (\n      <div>\n        <div className=\"timer\">\n          { time }\n        </div>\n      </div>\n\n    );\n  }\n}\n\nTimer.propTypes = {\n  saveTimeLeft: PropTypes.func.isRequired,\n  resetQuizTimer: PropTypes.bool.isRequired,\n  restoreTimer: PropTypes.func.isRequired,\n  handleStyle: PropTypes.func.isRequired,\n  isTimerActive: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isTimerActive: state.userReducer.isTimerActive,\n  resetQuizTimer: state.timerReducer.isTimerReseted,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveTimeLeft: (time) => dispatch(saveTimeLeftAction(time)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n\n// Para configuração do timer e correção do log de erro após a última questão do Quiz, tomamos por base o PR do grupo 21 da turma 07 e o repositório abaixo:\n// PR ---> https://github.com/tryber/sd-07-project-trivia-react-redux/pull/545/files\n// Repositório de @tspeed90 --> https://github.com/tspeed90/quiz-game/blob/master/src/components/timer.js\n// Referência do log de erro semelhante ao que estávamos encontrando: https://stackoverflow.com/questions/53949393/cant-perform-a-react-state-update-on-an-unmounted-component\n// Referências p/ refatoração parcial do timer:\n// ---> https://stackoverflow.com/questions/31545982/how-to-fire-periodic-actions-using-settimeout-and-dispatcher-in-redux/32921787#32921787\n// ---> https://www.pluralsight.com/guides/how-to-use-requestanimationframe-with-react\n// ---> https://jsfiddle.net/andykenward/9y1jjsuz\n// ---> https://jsfiddle.net/ab1n5vf9/\n// ---> https://jsbin.com/dupeji/12/edit?js,output\n// ---> https://jsbin.com/xusoqupipa/edit?js,output\n// ---> https://jsfiddle.net/a94jabzd/1/\n// ---> https://stackoverflow.com/questions/34577012/creating-a-stopwatch-with-redux\n// Agradecimento especial ao Coruja que deu a ideia de conectar o componente Timer ao estado global do redux!!\n"]},"metadata":{},"sourceType":"module"}