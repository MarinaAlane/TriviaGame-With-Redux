{"ast":null,"code":"var _jsxFileName = \"/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { loginAction, userNameAction, resetScore } from '../actions';\nimport trivia from '../TrYvia 2.gif';\nimport '../Style/login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      user: '',\n      isButtonDisabled: true,\n      token: '',\n      shoudlRedirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleToken();\n  }\n\n  async setTokenStorage(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          user = _this$state.user,\n          token = _this$state.token;\n    const _this$props = this.props,\n          userLogin = _this$props.userLogin,\n          userNameLogin = _this$props.userNameLogin;\n    localStorage.setItem('token', token);\n    userLogin(email);\n    userNameLogin(user);\n    this.setState({\n      shoudlRedirect: true\n    });\n  }\n\n  async handleToken() {\n    const request = await fetch('https://opentdb.com/api_token.php?command=request');\n    const data = await request.json();\n    const token = data.token;\n    this.setState({\n      token\n    });\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    this.setState({\n      [name]: value\n    }, () => {\n      console.log(value);\n\n      if (this.verifyInput()) {\n        this.setState({\n          isButtonDisabled: false\n        });\n      } else {\n        this.setState({\n          isButtonDisabled: true\n        });\n      }\n    });\n  }\n\n  verifyInput() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          user = _this$state2.user;\n    const emailRegex = /^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/gm;\n    const three = 3;\n    return user.length >= three && emailRegex.test(email);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          email = _this$state3.email,\n          user = _this$state3.user,\n          shoudlRedirect = _this$state3.shoudlRedirect,\n          isButtonDisabled = _this$state3.isButtonDisabled;\n\n    if (shoudlRedirect) {\n      return React.createElement(Redirect, {\n        to: \"/game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: trivia,\n      alt: \"trivia\",\n      className: \"App-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputs-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: email,\n      name: \"email\",\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      placeholder: \"EMAIL\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: user,\n      name: \"user\",\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      placeholder: \"NOME\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn\",\n      disabled: isButtonDisabled,\n      type: \"submit\",\n      \"data-testid\": \"btn-play\",\n      onClick: event => this.setTokenStorage(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"JOGAR\"), React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      type: \"submit\",\n      \"data-testid\": \"btn-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  userLogin: email => dispatch(loginAction(email)),\n  userNameLogin: user => dispatch(userNameAction(user)),\n  resetPlayerScore: () => dispatch(resetScore())\n});\n\nLogin.propTypes = {\n  userLogin: PropTypes.func.isRequired,\n  userNameLogin: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","Redirect","Link","loginAction","userNameAction","resetScore","trivia","Login","constructor","props","state","email","user","isButtonDisabled","token","shoudlRedirect","handleChange","bind","componentDidMount","handleToken","setTokenStorage","event","preventDefault","userLogin","userNameLogin","localStorage","setItem","setState","request","fetch","data","json","target","value","name","console","log","verifyInput","emailRegex","three","length","test","render","mapDispatchToProps","dispatch","resetPlayerScore","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { loginAction, userNameAction, resetScore } from '../actions';\nimport trivia from '../TrYvia 2.gif';\nimport '../Style/login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      user: '',\n      isButtonDisabled: true,\n      token: '',\n      shoudlRedirect: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleToken();\n  }\n\n  async setTokenStorage(event) {\n    event.preventDefault();\n    const { email, user, token } = this.state;\n    const { userLogin, userNameLogin } = this.props;\n    localStorage.setItem('token', token);\n    userLogin(email);\n    userNameLogin(user);\n    this.setState({ shoudlRedirect: true });\n  }\n\n  async handleToken() {\n    const request = await fetch('https://opentdb.com/api_token.php?command=request');\n    const data = await request.json();\n    const { token } = data;\n    this.setState({ token });\n  }\n\n  handleChange(event) {\n    const { target: { value, name } } = event;\n    this.setState({ [name]: value }, () => {\n      console.log(value);\n      if (this.verifyInput()) {\n        this.setState({ isButtonDisabled: false });\n      } else {\n        this.setState({ isButtonDisabled: true });\n      }\n    });\n  }\n\n  verifyInput() {\n    const { email, user } = this.state;\n    const emailRegex = /^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/gm;\n    const three = 3;\n\n    return user.length >= three && emailRegex.test(email);\n  }\n\n  render() {\n    const { email, user, shoudlRedirect, isButtonDisabled } = this.state;\n    if (shoudlRedirect) {\n      return <Redirect to=\"/game\" />;\n    }\n    return (\n      <div>\n        <img src={ trivia } alt=\"trivia\" className=\"App-logo\" />\n        <div className=\"login\">\n          <div className=\"inputs-login\">\n            <input\n              value={ email }\n              name=\"email\"\n              type=\"email\"\n              data-testid=\"input-gravatar-email\"\n              placeholder=\"EMAIL\"\n              onChange={ this.handleChange }\n            />\n            <input\n              value={ user }\n              name=\"user\"\n              type=\"text\"\n              data-testid=\"input-player-name\"\n              placeholder=\"NOME\"\n              onChange={ this.handleChange }\n            />\n          </div>\n          <button\n            className=\"btn\"\n            disabled={ isButtonDisabled }\n            type=\"submit\"\n            data-testid=\"btn-play\"\n            onClick={ (event) => this.setTokenStorage(event) }\n          >\n            JOGAR\n          </button>\n          <Link to=\"/settings\">\n            <button\n              className=\"btn\"\n              type=\"submit\"\n              data-testid=\"btn-settings\"\n            >\n              Configurações\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  userLogin: (email) => dispatch(loginAction(email)),\n  userNameLogin: (user) => dispatch(userNameAction(user)),\n  resetPlayerScore: () => dispatch(resetScore()),\n});\n\nLogin.propTypes = {\n  userLogin: PropTypes.func.isRequired,\n  userNameLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}