{"ast":null,"code":"var _jsxFileName = \"/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/components/Question/Question.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { decode } from 'he';\nimport Button from '../Button';\nimport Timer from '../Timer';\nimport { scoreAndAssertionsAction, isTimerActiveAction, resetTimer, removeResetTimer } from '../../actions';\nimport styles from './styles.module.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isButtonDisabled: false,\n      hideButton: 'hide-button',\n      red: '',\n      green: ''\n    };\n    this.handleStyle = this.handleStyle.bind(this);\n    this.handleScore = this.handleScore.bind(this);\n    this.handleResetColors = this.handleResetColors.bind(this);\n    this.restoreTimer = this.restoreTimer.bind(this);\n  }\n\n  restoreTimer() {\n    const _this$props = this.props,\n          setTimer = _this$props.setTimer,\n          removeQuestionTimerReset = _this$props.removeQuestionTimerReset;\n    setTimer(true);\n    removeQuestionTimerReset();\n  }\n\n  handleStyle() {\n    const resetQuizTimer = this.props.resetQuizTimer;\n    this.setState({\n      green: 'green',\n      red: 'red',\n      hideButton: '',\n      isButtonDisabled: true\n    });\n    resetQuizTimer();\n  } // nextButtonReset\n\n\n  handleResetColors() {\n    this.setState({\n      isButtonDisabled: false,\n      green: '',\n      red: ''\n    });\n    const resetQuizTimer = this.props.resetQuizTimer;\n    resetQuizTimer();\n  }\n\n  handleLocalStorage() {\n    const userReducer = this.props.userReducer;\n    const email = userReducer.email,\n          user = userReducer.user,\n          playerScore = userReducer.playerScore,\n          assertions = userReducer.assertions;\n    const userObject = {\n      player: {\n        name: user,\n        assertions,\n        score: playerScore,\n        gravatarEmail: email\n      }\n    };\n    localStorage.setItem('state', JSON.stringify(userObject));\n  }\n\n  handleScore() {\n    const _this$props2 = this.props,\n          quiz = _this$props2.quiz,\n          time = _this$props2.time;\n    const ten = 10;\n    const three = 3;\n    this.handleLocalStorage();\n\n    switch (quiz.difficulty) {\n      case 'hard':\n        return ten + time * three;\n\n      case 'medium':\n        return ten + time * 2;\n\n      default:\n        return ten + time * 1;\n    }\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          quiz = _this$props3.quiz,\n          getNextQuestion = _this$props3.getNextQuestion,\n          setScore = _this$props3.setScore;\n    const correctAnswer = quiz.correct_answer,\n          incorrectAnswers = quiz.incorrect_answers;\n    const _this$state = this.state,\n          isButtonDisabled = _this$state.isButtonDisabled,\n          red = _this$state.red,\n          green = _this$state.green,\n          hideButton = _this$state.hideButton;\n    const answers = [correctAnswer].concat(incorrectAnswers).sort();\n    const verifyScore = this.handleScore();\n    return React.createElement(\"div\", {\n      className: styles.questionContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      handleStyle: this.handleStyle,\n      handleRestartTimer: this.handleResetColors,\n      restoreTimer: this.restoreTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      \"data-testid\": \"question-category\",\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, quiz.category), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, quiz.difficulty), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, decode(quiz.question)), answers.map((answer, index) => answer === correctAnswer ? React.createElement(Button, {\n      key: answer,\n      className: green,\n      dataTestid: \"correct-answer\",\n      onClick: () => {\n        this.handleStyle();\n        setScore(verifyScore);\n      },\n      disabled: isButtonDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, decode(answer)) : React.createElement(Button, {\n      key: answer,\n      className: red,\n      dataTestid: `wrong-answer-${index}`,\n      onClick: this.handleStyle,\n      disabled: isButtonDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, decode(answer))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      dataTestid: \"btn-next\",\n      className: hideButton,\n      onClick: () => {\n        getNextQuestion();\n        this.handleResetColors();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Pr\\xF3xima\")));\n  }\n\n}\n\nQuestion.defaultProps = {\n  quiz: {},\n  userReducer: {}\n};\nQuestion.propTypes = {\n  quiz: PropTypes.shape(),\n  setScore: PropTypes.func.isRequired,\n  getNextQuestion: PropTypes.func.isRequired,\n  time: PropTypes.number.isRequired,\n  userReducer: PropTypes.shape(),\n  setTimer: PropTypes.func.isRequired,\n  resetQuizTimer: PropTypes.func.isRequired,\n  removeQuestionTimerReset: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  time: state.userReducer.time,\n  userReducer: state.userReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setScore: score => dispatch(scoreAndAssertionsAction(score)),\n  setTimer: payload => dispatch(isTimerActiveAction(payload)),\n  resetQuizTimer: () => dispatch(resetTimer()),\n  removeQuestionTimerReset: () => dispatch(removeResetTimer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question); // Referências:\n// Para resolver problema de assincronicidade nas funções que adicionam pontos e acertos ao localStorage e de onde surgiu a ideia de setar as classNames dos buttons via estado do componente:\n// ---> PR do grupo 21 - turma 7: https://github.com/tryber/sd-07-project-trivia-react-redux/pull/545/files\n// Refactoring da função que embaralha o array de respostas: https://github.com/tspeed90/quiz-game/blob/master/src/components/timer.js","map":{"version":3,"sources":["/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/components/Question/Question.jsx"],"names":["React","Component","PropTypes","connect","decode","Button","Timer","scoreAndAssertionsAction","isTimerActiveAction","resetTimer","removeResetTimer","styles","Question","constructor","state","isButtonDisabled","hideButton","red","green","handleStyle","bind","handleScore","handleResetColors","restoreTimer","props","setTimer","removeQuestionTimerReset","resetQuizTimer","setState","handleLocalStorage","userReducer","email","user","playerScore","assertions","userObject","player","name","score","gravatarEmail","localStorage","setItem","JSON","stringify","quiz","time","ten","three","difficulty","render","getNextQuestion","setScore","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","answers","concat","sort","verifyScore","questionContainer","category","question","map","answer","index","defaultProps","propTypes","shape","func","isRequired","number","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { decode } from 'he';\nimport Button from '../Button';\nimport Timer from '../Timer';\nimport { scoreAndAssertionsAction,\n  isTimerActiveAction, resetTimer, removeResetTimer } from '../../actions';\nimport styles from './styles.module.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isButtonDisabled: false,\n      hideButton: 'hide-button',\n      red: '',\n      green: '',\n    };\n    this.handleStyle = this.handleStyle.bind(this);\n    this.handleScore = this.handleScore.bind(this);\n    this.handleResetColors = this.handleResetColors.bind(this);\n    this.restoreTimer = this.restoreTimer.bind(this);\n  }\n\n  restoreTimer() {\n    const { setTimer, removeQuestionTimerReset } = this.props;\n    setTimer(true);\n    removeQuestionTimerReset();\n  }\n\n  handleStyle() {\n    const { resetQuizTimer } = this.props;\n    this.setState({\n      green: 'green',\n      red: 'red',\n      hideButton: '',\n      isButtonDisabled: true,\n    });\n    resetQuizTimer();\n  }\n\n  // nextButtonReset\n  handleResetColors() {\n    this.setState({ isButtonDisabled: false, green: '', red: '' });\n    const { resetQuizTimer } = this.props;\n    resetQuizTimer();\n  }\n\n  handleLocalStorage() {\n    const { userReducer } = this.props;\n    const { email, user, playerScore, assertions } = userReducer;\n    const userObject = {\n      player: {\n        name: user,\n        assertions,\n        score: playerScore,\n        gravatarEmail: email,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(userObject));\n  }\n\n  handleScore() {\n    const { quiz, time } = this.props;\n    const ten = 10;\n    const three = 3;\n    this.handleLocalStorage();\n    switch (quiz.difficulty) {\n    case 'hard':\n      return ten + (time * three);\n    case 'medium':\n      return ten + (time * 2);\n    default:\n      return ten + (time * 1);\n    }\n  }\n\n  render() {\n    const { quiz, getNextQuestion, setScore } = this.props;\n    const { correct_answer: correctAnswer, incorrect_answers: incorrectAnswers } = quiz;\n    const { isButtonDisabled, red, green, hideButton } = this.state;\n    const answers = [correctAnswer].concat(incorrectAnswers).sort();\n    const verifyScore = this.handleScore();\n    return (\n      <div className={ styles.questionContainer }>\n        <Timer\n          handleStyle={ this.handleStyle }\n          handleRestartTimer={ this.handleResetColors }\n          restoreTimer={ this.restoreTimer }\n        />\n        <h4 data-testid=\"question-category\" className=\"center\">{ quiz.category }</h4>\n        <h5>{ quiz.difficulty }</h5>\n\n        <p data-testid=\"question-text\">{ decode(quiz.question)}</p>\n        { answers.map((answer, index) => (answer === correctAnswer ? (\n          <Button\n            key={ answer }\n            className={ green }\n            dataTestid=\"correct-answer\"\n            onClick={ () => { this.handleStyle(); setScore(verifyScore); } }\n            disabled={ isButtonDisabled }\n          >\n            { decode(answer)}\n          </Button>\n        ) : (\n          <Button\n            key={ answer }\n            className={ red }\n            dataTestid={ `wrong-answer-${index}` }\n            onClick={ this.handleStyle }\n            disabled={ isButtonDisabled }\n          >\n            { decode(answer)}\n          </Button>\n        )))}\n        <div>\n          <Button\n            dataTestid=\"btn-next\"\n            className={ hideButton }\n            onClick={ () => { getNextQuestion(); this.handleResetColors(); } }\n          >\n            Próxima\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuestion.defaultProps = {\n  quiz: {},\n  userReducer: {},\n};\n\nQuestion.propTypes = {\n  quiz: PropTypes.shape(),\n  setScore: PropTypes.func.isRequired,\n  getNextQuestion: PropTypes.func.isRequired,\n  time: PropTypes.number.isRequired,\n  userReducer: PropTypes.shape(),\n  setTimer: PropTypes.func.isRequired,\n  resetQuizTimer: PropTypes.func.isRequired,\n  removeQuestionTimerReset: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  time: state.userReducer.time,\n  userReducer: state.userReducer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setScore: (score) => dispatch(scoreAndAssertionsAction(score)),\n  setTimer: (payload) => dispatch(isTimerActiveAction(payload)),\n  resetQuizTimer: () => dispatch(resetTimer()),\n  removeQuestionTimerReset: () => dispatch(removeResetTimer()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n\n// Referências:\n// Para resolver problema de assincronicidade nas funções que adicionam pontos e acertos ao localStorage e de onde surgiu a ideia de setar as classNames dos buttons via estado do componente:\n// ---> PR do grupo 21 - turma 7: https://github.com/tryber/sd-07-project-trivia-react-redux/pull/545/files\n// Refactoring da função que embaralha o array de respostas: https://github.com/tspeed90/quiz-game/blob/master/src/components/timer.js\n"]},"metadata":{},"sourceType":"module"}