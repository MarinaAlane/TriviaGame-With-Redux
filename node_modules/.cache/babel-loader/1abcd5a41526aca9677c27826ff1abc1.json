{"ast":null,"code":"var _jsxFileName = \"/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header/Header';\nimport { resetScore } from '../actions';\nimport styles from './styles.module.css';\n\nclass Feedback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderBadScore = this.renderBadScore.bind(this);\n    this.renderGoodScoore = this.renderGoodScoore.bind(this);\n    this.rankingLocalStorage = this.rankingLocalStorage.bind(this);\n    this.handleResetScore = this.handleResetScore.bind(this);\n  }\n\n  componentDidMount() {\n    this.rankingLocalStorage();\n  }\n\n  rankingLocalStorage() {\n    const rankingOne = [];\n    const oldRanking = JSON.parse(localStorage.getItem('ranking'));\n    const _this$props = this.props,\n          user = _this$props.user,\n          score = _this$props.score,\n          image = _this$props.image;\n    const rankingObject = {\n      name: user,\n      score,\n      picture: image\n    };\n\n    if (oldRanking) {\n      const rankingArray = [...oldRanking, rankingObject];\n      const sortedRanking = rankingArray.sort((a, b) => b.score - a.score);\n      localStorage.setItem('ranking', JSON.stringify(sortedRanking));\n    } else {\n      const newRanking = [...rankingOne, rankingObject];\n      localStorage.setItem('ranking', JSON.stringify(newRanking));\n    }\n  }\n\n  handleResetScore() {\n    const resetPlayerScore = this.props.resetPlayerScore;\n    resetPlayerScore();\n  }\n\n  renderGoodScoore() {\n    return React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Mandou bem!\");\n  }\n\n  renderBadScore() {\n    return React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Podia ser melhor...\");\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          score = _this$props2.score,\n          assertions = _this$props2.assertions;\n    const minimalScore = 3;\n    return React.createElement(\"div\", {\n      className: styles.gamePageContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), assertions >= minimalScore ? this.renderGoodScoore() : this.renderBadScore(), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Voc\\xEA acertou:\", ' ', React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, assertions), ' ', \"quest\\xF5es.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Um total de:\", ' ', React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, score), ' ', \"pontos!\"), React.createElement(Link, {\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      \"data-testid\": \"btn-ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Ver Ranking\")), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: this.handleResetScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Jogar Novamente\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  score: state.userReducer.playerScore,\n  assertions: state.userReducer.assertions,\n  image: state.userReducer.image,\n  user: state.userReducer.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetPlayerScore: () => dispatch(resetScore())\n});\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  resetPlayerScore: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback); // https://pt.stackoverflow.com/questions/46600/como-ordenar-uma-array-de-objetos-com-array-sort","map":{"version":3,"sources":["/home/marina/Documentos/Trivia/sd-010-a-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","Link","connect","PropTypes","Header","resetScore","styles","Feedback","Component","constructor","props","renderBadScore","bind","renderGoodScoore","rankingLocalStorage","handleResetScore","componentDidMount","rankingOne","oldRanking","JSON","parse","localStorage","getItem","user","score","image","rankingObject","name","picture","rankingArray","sortedRanking","sort","a","b","setItem","stringify","newRanking","resetPlayerScore","render","assertions","minimalScore","gamePageContent","mapStateToProps","state","userReducer","playerScore","mapDispatchToProps","dispatch","propTypes","number","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,mBAAL;AACD;;AAEDA,EAAAA,mBAAmB,GAAG;AACpB,UAAMG,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AAFoB,wBAGW,KAAKZ,KAHhB;AAAA,UAGZa,IAHY,eAGZA,IAHY;AAAA,UAGNC,KAHM,eAGNA,KAHM;AAAA,UAGCC,KAHD,eAGCA,KAHD;AAIpB,UAAMC,aAAa,GAAG;AACpBC,MAAAA,IAAI,EAAEJ,IADc;AAEpBC,MAAAA,KAFoB;AAGpBI,MAAAA,OAAO,EAAEH;AAHW,KAAtB;;AAKA,QAAIP,UAAJ,EAAgB;AACd,YAAMW,YAAY,GAAG,CAAC,GAAGX,UAAJ,EAAgBQ,aAAhB,CAArB;AACA,YAAMI,aAAa,GAAGD,YAAY,CAACE,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACT,KAAF,GAAUQ,CAAC,CAACR,KAAxC,CAAtB;AACAH,MAAAA,YAAY,CAACa,OAAb,CAAqB,SAArB,EAAgCf,IAAI,CAACgB,SAAL,CAAeL,aAAf,CAAhC;AACD,KAJD,MAIO;AACL,YAAMM,UAAU,GAAG,CAAC,GAAGnB,UAAJ,EAAgBS,aAAhB,CAAnB;AACAL,MAAAA,YAAY,CAACa,OAAb,CAAqB,SAArB,EAAgCf,IAAI,CAACgB,SAAL,CAAeC,UAAf,CAAhC;AACD;AACF;;AAEDrB,EAAAA,gBAAgB,GAAG;AAAA,UACTsB,gBADS,GACY,KAAK3B,KADjB,CACT2B,gBADS;AAEjBA,IAAAA,gBAAgB;AACjB;;AAEDxB,EAAAA,gBAAgB,GAAG;AAAE,WAAQ;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AAA4D;;AAEjFF,EAAAA,cAAc,GAAG;AAAE,WAAQ;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR;AAAoE;;AAEvF2B,EAAAA,MAAM,GAAG;AAAA,yBACuB,KAAK5B,KAD5B;AAAA,UACCc,KADD,gBACCA,KADD;AAAA,UACQe,UADR,gBACQA,UADR;AAEP,UAAMC,YAAY,GAAG,CAArB;AAEA,WACE;AAAK,MAAA,SAAS,EAAGlC,MAAM,CAACmC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIF,UAAU,IAAIC,YAAd,GAA6B,KAAK3B,gBAAL,EAA7B,GAAuD,KAAKF,cAAL,EAF3D,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEG,GAFH,EAGE;AAAM,qBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6C4B,UAA7C,CAHF,EAIG,GAJH,iBAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEG,GAFH,EAGE;AAAM,qBAAY,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0Cf,KAA1C,CAHF,EAIG,GAJH,YAVF,EAiBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,qBAAY,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAjBF,EAsBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,gBAFd;AAGE,MAAA,OAAO,EAAG,KAAKT,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAtBF,CADF;AAkCD;;AA/EoC;;AAkFvC,MAAM2B,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,KAAK,EAAEmB,KAAK,CAACC,WAAN,CAAkBC,WADS;AAElCN,EAAAA,UAAU,EAAEI,KAAK,CAACC,WAAN,CAAkBL,UAFI;AAGlCd,EAAAA,KAAK,EAAEkB,KAAK,CAACC,WAAN,CAAkBnB,KAHS;AAIlCF,EAAAA,IAAI,EAAEoB,KAAK,CAACC,WAAN,CAAkBrB;AAJU,CAAZ,CAAxB;;AAOA,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,gBAAgB,EAAE,MAAMU,QAAQ,CAAC1C,UAAU,EAAX;AADQ,CAAf,CAA3B;;AAIAE,QAAQ,CAACyC,SAAT,GAAqB;AACnBxB,EAAAA,KAAK,EAAErB,SAAS,CAAC8C,MAAV,CAAiBC,UADL;AAEnBX,EAAAA,UAAU,EAAEpC,SAAS,CAAC8C,MAAV,CAAiBC,UAFV;AAGnBzB,EAAAA,KAAK,EAAEtB,SAAS,CAACgD,MAAV,CAAiBD,UAHL;AAInB3B,EAAAA,IAAI,EAAEpB,SAAS,CAACgD,MAAV,CAAiBD,UAJJ;AAKnBb,EAAAA,gBAAgB,EAAElC,SAAS,CAACiD,IAAV,CAAeF;AALd,CAArB;AAQA,eAAehD,OAAO,CAACwC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CvC,QAA7C,CAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header/Header';\nimport { resetScore } from '../actions';\nimport styles from './styles.module.css';\n\nclass Feedback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderBadScore = this.renderBadScore.bind(this);\n    this.renderGoodScoore = this.renderGoodScoore.bind(this);\n    this.rankingLocalStorage = this.rankingLocalStorage.bind(this);\n    this.handleResetScore = this.handleResetScore.bind(this);\n  }\n\n  componentDidMount() {\n    this.rankingLocalStorage();\n  }\n\n  rankingLocalStorage() {\n    const rankingOne = [];\n    const oldRanking = JSON.parse(localStorage.getItem('ranking'));\n    const { user, score, image } = this.props;\n    const rankingObject = {\n      name: user,\n      score,\n      picture: image,\n    };\n    if (oldRanking) {\n      const rankingArray = [...oldRanking, rankingObject];\n      const sortedRanking = rankingArray.sort((a, b) => b.score - a.score);\n      localStorage.setItem('ranking', JSON.stringify(sortedRanking));\n    } else {\n      const newRanking = [...rankingOne, rankingObject];\n      localStorage.setItem('ranking', JSON.stringify(newRanking));\n    }\n  }\n\n  handleResetScore() {\n    const { resetPlayerScore } = this.props;\n    resetPlayerScore();\n  }\n\n  renderGoodScoore() { return (<h1 data-testid=\"feedback-text\">Mandou bem!</h1>); }\n\n  renderBadScore() { return (<h1 data-testid=\"feedback-text\">Podia ser melhor...</h1>); }\n\n  render() {\n    const { score, assertions } = this.props;\n    const minimalScore = 3;\n\n    return (\n      <div className={ styles.gamePageContent }>\n        <Header />\n        { assertions >= minimalScore ? this.renderGoodScoore() : this.renderBadScore() }\n        <h3>\n          Você acertou:\n          {' '}\n          <span data-testid=\"feedback-total-question\">{assertions}</span>\n          {' '}\n          questões.\n        </h3>\n        <h3>\n          Um total de:\n          {' '}\n          <span data-testid=\"feedback-total-score\">{score}</span>\n          {' '}\n          pontos!\n        </h3>\n        <Link to=\"/ranking\">\n          <button type=\"submit\" data-testid=\"btn-ranking\">\n            Ver Ranking\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ this.handleResetScore }\n          >\n            Jogar Novamente\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  score: state.userReducer.playerScore,\n  assertions: state.userReducer.assertions,\n  image: state.userReducer.image,\n  user: state.userReducer.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetPlayerScore: () => dispatch(resetScore()),\n});\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  resetPlayerScore: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n\n// https://pt.stackoverflow.com/questions/46600/como-ordenar-uma-array-de-objetos-com-array-sort\n"]},"metadata":{},"sourceType":"module"}